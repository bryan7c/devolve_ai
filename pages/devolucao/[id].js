import { useState } from "react";
import Head from "next/head";
import { InternalLayout } from "@/src/layout/internalLayout";
import { useRouter } from "next/router";
import { updateReturnedItem } from "@/src/services/ReturnedService";
import { Button, Grid, Paper } from "@mui/material";
import { DatePicker, LocalizationProvider } from "@mui/x-date-pickers";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import dayjs from "dayjs";
import "dayjs/locale/pt-br";
import dynamic from "next/dynamic";
import {
  LocationSearchResultContainer,
  LocationSearchResultItem,
} from "@/src/components/Autocomplete/locationResultItem";
import { useLoadScript } from "@react-google-maps/api";
import InputSearchLocation from "@/src/components/Autocomplete/InputSearchLocation";
import ReturnedPage from "./returnedPage";

const Map = dynamic(() => import("@/src/components/Map/index"), { ssr: false });

export async function getServerSideProps({ query }) {
  const id = query.id.toString();
  const baseUrl = process.env.API_URL;
  const googleKey = process.env.GOOGLE_MAP_KEY;
  const url = `${baseUrl}/returned?id=${id}`;
  const returnedItem = await fetch(url).then((response) => response.json());

  return {
    props: {
      returnedItem: returnedItem[0],
      googleKey,
    },
  };
}

const libraries = ["places"];
function EditReturnedPage({ returnedItem, googleKey }) {
  const router = useRouter();

  function handleSave(data) {
    data._id = returnedItem._id;
    console.log(data);
    updateReturnedItem(data).then(() => {
      router.back();
    });
  }

  return (
    <>
      <Head>
        <title>Editanto devolução {returnedItem.titulo}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ReturnedPage returnedItem={returnedItem} onSave={handleSave} googleKey={googleKey}></ReturnedPage>
    </>
  );
}
EditReturnedPage.PageLayout = InternalLayout;

export default EditReturnedPage;
